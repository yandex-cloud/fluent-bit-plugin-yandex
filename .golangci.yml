# This file contains all available configuration options
# with their default values.

# options for analysis running
run:
  # default concurrency is a available CPU number
  concurrency: 8

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  deadline: 20m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle, default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

# all available settings of specific linters
linters-settings:
  govet:
    # report about shadowed variables
    check-shadowing: false

    # settings per analyzer
    settings:
      printf: # analyzer name, run `go tool vet help` to see all analyzers
        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
        - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
        - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
        - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
        - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf

    enable-all: false
    disable-all: true
    enable:
    - asmdecl
    - assign
    - atomic
    - bools
    - buildtag
    - cgocall
    - composites
    - copylocks
    - errorsas
    - httpresponse
    - ifaceassert
    - loopclosure
    - lostcancel
    - nilfunc
    - printf
    - shift
    - stdmethods
    - structtag
    - testinggoroutine
    - tests
    - unmarshal
    - unreachable
    - unsafeptr
    - unusedresult

  goimports:
    local-prefixes: github.com/yandex-cloud/fluent-bit-plugin-yandex

  goconst:
    # minimal length of string constant, 3 by default
    min-len: 3
    # minimal occurrences count to trigger, 3 by default
    min-occurrences: 3

  misspell:
    # Correct spellings using locale preferences for US or UK.
    # Default is to use a neutral variety of English.
    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
    locale: US

  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 240
    # tab width in spaces. Default to 1.
    tab-width: 4

  staticcheck:
    # Select the Go version to target. The default is '1.13'.
    go: 1.19.1
    checks: # default checks from https://staticcheck.io/docs/configuration/options/ + excluded SA1019
    - all
    - -ST1000 # Incorrect or missing package comment
    - -ST1003 # Poorly chosen identifier
    - -ST1016 # Use consistent method receiver names
    - -ST1020 # The documentation of an exported function should start with the function’s name
    - -ST1021 # The documentation of an exported type should start with type’s name
    - -ST1022 # The documentation of an exported variable or constant should start with variable’s name

  unused:
    # treat code as a program (not a library) and report unused exported identifiers; default is false.
    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false

  revive:
    severity: error
    confidence: 0.8
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: deep-exit
        disabled: true
      - name: dot-imports
      - name: duplicated-imports
      - name: early-return
        disabled: true
      - name: error-naming
      - name: error-return
      - name: error-strings
      - name: errorf
      - name: identical-branches
      - name: if-return
      - name: increment-decrement
      - name: indent-error-flow
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: var-naming
      - name: var-declaration
      - name: unexported-return
linters:
  enable-all: false
  enable:
  - goimports
  - govet
  - ineffassign
  - lll
  - staticcheck
  - unused
  - gosimple
  - gofmt
  - revive
  - unconvert
  - typecheck
  disable-all: true

issues:
  # Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: false

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  # It's a super-useful option for integration of golangci-lint into existing
  # large codebase. It's not practical to fix all existing issues at the moment
  # of integration: much better don't allow issues in new code.
  # Default is false.
  new: false
